user_path = '/home/cs14274101/dj'
data_path = '${user_path}/data/bca'

train = true
test = false

is_ddp = false
gpus = ['0']
n_classes = 2

label = 'Sk'

loss_criterion = 'dice_ce'
lr = 1e-2
epochs = 1000
batch_size = 12
n_iter_per_epoch = 250
val_batch_size = 50
val_interval = 1

checkpoint_saved_interval = 50

snapshot = '${user_path}/running/bca_${label}_${network.architecture}'

# dataset
dataset_property_file = '${data_path}/dataset/${label}_dataset_properties.json'

#boundary_file = '${data_path}/boundaries/Skn_boundary.csv'
training_slice_txt = '${data_path}/dataset/${label}_training_slices.txt'
val_ct_txt = '${data_path}/dataset/${label}_val_cts.txt'

# for training
[slice_sample_dir]
slice_path = '${data_path}/json/slices'
image = '${slice_path}/images'
SAT = '${slice_path}/SAT'
SR = '${slice_path}/SR'
VAT = '${slice_path}/VAT'
IAM = '${slice_path}/IAM'
SMT = '${slice_path}/SMT'
SMR = '${slice_path}/SMR'
Sk = '${slice_path}/Sk'
Dphm = '${slice_path}/Dphm'

# for validation
[volume_sample_dir]
volume_path = '${data_path}/json/volume'
image = '${volume_path}/images'
SAT = '${volume_path}/SAT'
VAT = '${volume_path}/VAT'
SMT = '${volume_path}/SMT'
Sk = '${volume_path}/Sk'
Dphm = '${volume_path}/Dphm'

# Accelerator
[cudnn]
benchmark = true
deterministic = false

# data transformer

[training_data_augments.spatial_transform]
# Spatial transform
patch_size = [512, 512]
patch_center_dist_from_border = 0
random_crop = false
p_elastic_defrom= 0
p_rotation = 0.2
rotation = [-3.1415926, 3.1415926]
p_scaling = 0.2
scaling = [0.7, 1.4]
p_synchronize_scaling_across_axes = 1

[training_data_augments.gaussian_noise_transform]
p = 0.1
noise_variance = [0, 0.1]
p_per_channel = 1
synchronize_channels = true

[training_data_augments.gaussian_blur_transform]
p = 0.2
blur_sigma = [0.5, 1.0]
synchronize_channels = true
synchronize_axes = false
p_per_channel = 0.5

[training_data_augments.brightness_transform]
p = 0.15
multiplier_range = [0.75, 1.25]
synchronize_channels = false
p_per_channel = 1

[training_data_augments.contrast_transform]
p = 0.15
contrast_range = [0.75, 1.25]
preserve_range = true
synchronize_channels = false
p_per_channel = 1

[training_data_augments.gamma_transform1]
p = 0.1
gamma = [0.7, 1.5]
p_invert_image = 1
synchronize_channels = false
p_per_channel = 1
p_retain_stats = 1

[training_data_augments.gamma_transform2]
p = 0.3
gamma = [0.7, 1.5]
p_invert_image = 0
synchronize_channels = false
p_per_channel = 1
p_retain_stats = 1

[network]
architecture = 'unet'
input_channels = 1
num_classes = 2
num_stages = 8
conv_dim = 2
num_features_per_stage = [32, 64, 128, 256, 512, 512, 512, 512]
num_conv_per_stage_encoder = [2, 2, 2, 2, 2, 2, 2, 2]
num_conv_per_stage_decoder = [2, 2, 2, 2, 2, 2, 2]
kernel_sizes = [[3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 3]]
strides = [[1, 1], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]]
conv_bias = true
non_linear_first = false
norm_op = 'InstanceNorm'
non_linear = 'relu'
deep_supervision = false
[network.norm_op_kwargs]
affine = true
eps = 1e-05
[network.non_linear_kwargs]
inplace = true
[network.initialization]
allow_init = true
method = 'kaiming_initialize'
[network.initialization.params]
#a = 1e-2
a = 0
nonlinearity = 'relu'